% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Websockets.R
\name{AlpacaStreams}
\alias{AlpacaStreams}
\title{Alpaca Websocket Streaming}
\description{
An \code{R6} class that allows interaction with \href{https://alpaca.markets/docs/api-documentation/api-v2/streaming/}{Alpaca} and \href{https://polygon.io/sockets}{Polygon} websockets. \lifecycle{experimental}
}
\section{Channels}{
Channels are joined by calling the \verb{$channel()} method. The socket is automatically detected based on the channel request.
\subsection{\href{https://alpaca.markets/docs/api-documentation/api-v2}{Available Alpaca Channels}:}{

\itemize{
\item{\code{"trade_alpaca"/"t"}}{ \href{https://alpaca.markets/docs/api-documentation/api-v2/streaming#order-updates}{Alpaca trade stream}}
\item{\code{All V2 streaming data channels:}}{ V2 Streaming websocket channels are connected to by supplying a \verb{named list} to \code{channel} with any or all of the following list items, each of which contains a \verb{character vector} of symbol names - or \code{*} for \code{bars} to subscribe to all symbols:
\itemize{
\item{\code{trades}}
\item{\code{quotes}}
\item{\code{bars}}
}
See the \href{https://alpaca.markets/docs/api-documentation/api-v2/market-data/alpaca-data-api-v2/real-time/#subscribe}{V2 Streaming Documentation} for details.}
\item{\emph{Note}: The Alpaca V1 Streaming API has been superseded by the V2 API and is not supported.}
}
}

\subsection{\href{https://polygon.io/sockets}{Available Polygon Channels}:}{

\itemize{
\item{T.* Trades}
\item{Q.* Quotes}
\item{A.* Aggregate ( per second )}
\item{AM.* Aggregate ( per minute )}
}
where * is the ticker symbol and the argument is case-insensitive. IE \code{"am.bynd"} will subscribe to by minute aggregates for Beyond Meat. Multiple channels can be subscribed to using a character vector.
\subsection{Channel Data Format}{

Messages returned by the Polygon Websocket depend on the channel:
}

\subsection{Trade}{

\itemize{
\item{\code{ev}}{ Event Type}
\item{\code{sym}}{ Symbol Ticker}
\item{\code{x}}{ Exchange ID}
\item{\code{i}}{ Trade ID}
\item{\code{z}}{ Tape ( 1=A 2=B 3=C)}
\item{\code{p}}{ Price}
\item{\code{s}}{ Trade Size}
\item{\code{c}}{ Trade Conditions}
\item{\code{t}}{ Trade Timestamp ( Unix MS )}
}
}

\subsection{Quote}{

\itemize{
\item{\code{ev}}{ Event Type}
\item{\code{sym}}{ Symbol Ticker}
\item{\code{bx}}{ Bix Exchange ID}
\item{\code{bp}}{ Bid Price}
\item{\code{bs}}{ Bid Size}
\item{\code{ax}}{ Ask Exchange ID}
\item{\code{ap}}{ Ask Price}
\item{\code{as}}{ Ask Size}
\item{\code{c}}{ Quote Condition}
\item{\code{t}}{ Quote Timestamp ( Unix MS )}
}
}

\subsection{Agg}{

\itemize{
\item{\code{ev}}{ Event Type ( A = Second Agg, AM = Minute Agg )}
\item{\code{sym}}{ Symbol Ticker}
\item{\code{v}}{ Tick Volume}
\item{\code{av}}{ Accumulated Volume ( Today )}
\item{\code{op}}{ Todays official opening price}
\item{\code{vw}}{ VWAP (Volume Weighted Average Price)}
\item{\code{o}}{ Tick Open Price}
\item{\code{c}}{ Tick Close Price}
\item{\code{h}}{ Tick High Price}
\item{\code{l}}{ Tick Low Price}
\item{\code{a}}{ Tick Average / VWAP Price}
\item{\code{s}}{ Tick Start Timestamp ( Unix MS )}
\item{\code{e}}{ Tick End Timestamp ( Unix MS )}
}
}

}
}

\examples{
\dontrun{
AS <- AlpacaStreams$new()
AS$channel()
# Subscribe to by-minute data for Beyond Meat Inc
AS$channel(list(bars = "BYND"))
# Turn off console messages
AS$Alpaca$data$opts$b.BYND$toConsole <- FALSE
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{Alpaca}}{slot for \href{../../AlpacaforR/html/AlpacaSocket.html}{\code{AlpacaSocket}}. Contains a socket for the v1 account websocket and the v2 data websocket.}

\item{\code{Polygon}}{slot for \href{../../AlpacaforR/html/PolygonSocket.html}{\code{PolygonSocket}}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-AlpacaStreams-new}{\code{AlpacaStreams$new()}}
\item \href{#method-AlpacaStreams-channel}{\code{AlpacaStreams$channel()}}
\item \href{#method-AlpacaStreams-logs}{\code{AlpacaStreams$logs()}}
\item \href{#method-AlpacaStreams-connect}{\code{AlpacaStreams$connect()}}
\item \href{#method-AlpacaStreams-close}{\code{AlpacaStreams$close()}}
\item \href{#method-AlpacaStreams-clone}{\code{AlpacaStreams$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlpacaStreams-new"></a>}}
\if{latex}{\out{\hypertarget{method-AlpacaStreams-new}{}}}
\subsection{Method \code{new()}}{
Connect to and authorize Alpaca and Polygon websocket streams and set default options for these websockets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlpacaStreams$new(
  socket = c("account_alpaca", "data_alpaca", "polygon")[1:2],
  toConsole = TRUE,
  log = TRUE,
  log_limit = 5000,
  bars_limit = 5000,
  write_dir = file.path(getwd(), "AlpacaStreams"),
  overwrite = TRUE,
  msg_action = NULL,
  live = get_live(),
  pro = get_pro(),
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{socket}}{\code{(character)} Which Websocket stream to connect to:
\itemize{
\item{\code{`"account_alpaca"/"a"`}}{ Alpaca account updates}
\item{\code{`"data_alpaca"/"a"`}}{ Alpaca real-time data websockets}
\item{\code{`"polygon"/"p"`}}{ Polygon websockets \strong{Polygon Subscription Required}}
}}

\item{\code{toConsole}}{\code{(logical)} flag for whether to report websocket messages to the console. \strong{Default} \code{TRUE}.}

\item{\code{log}}{\code{(logical)} flag for whether to retain a log of messages (from Alpaca) or messages & bars from symbol feeds from Polygon. \strong{Default} \code{TRUE} to store logs.}

\item{\code{log_limit}}{\code{(numeric)} indicating the number of previous messages to retain in the log. \strong{Default} \code{5000}. See Details for memory handling specifics.}

\item{\code{bars_limit}}{\code{(numeric)} indicating the number of previous bars (per subscription feed) to retain in the log. \strong{Default} \code{5000}. See Details for memory handling specifics.}

\item{\code{write_dir}}{\code{(character/logical)} The directory in which to store logs on disk. Use \code{FALSE} to disable logging to disk. Folders will be created. \strong{Default} \code{"AlpacaStreams"}.}

\item{\code{overwrite}}{\code{(logical)} indicating whether to overwrite data from previous instances of a websocket connection. \strong{Default} \code{TRUE}.}

\item{\code{msg_action}}{\code{(expression)} An expression that performs a user-specified action on the receipt of websocket message. These act on the \code{msg} object seen printed to the console when a message is received (if \code{toConsole = TRUE}). The \code{msg} object also contains a \verb{$ts} column with the timestamp as a \code{POSIXct} and a \verb{$socket} column with the socket name of origin (\code{"Alpaca"/"Polygon"}) that are not visible in what is printed to the console but accessible to \code{msg_action}. The expression can also reference the \code{self} internal environment of this \code{\link[R6]{R6Class}}.}

\item{\code{live}}{Whether to connect to the live or paper API. See ?account for details.}

\item{\code{pro}}{\code{(logical)} Whether to use a Pro account. See \link{get_pro}}

\item{\code{...}}{Passed on to \link[websocket]{WebSocket}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlpacaStreams-channel"></a>}}
\if{latex}{\out{\hypertarget{method-AlpacaStreams-channel}{}}}
\subsection{Method \code{channel()}}{
Sends request to websocket to join the specified channel. Channel options are inherited from defaults set in  \code{\link[AlpacaforR]{AlpacaStreams}$initialize} unless overridden.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlpacaStreams$channel(
  channel = NULL,
  subscribe = TRUE,
  overwrite = FALSE,
  msg_action = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{channel}}{The channel to join}

\item{\code{subscribe}}{\code{(logical)} \strong{Default \code{TRUE}}. Set to \code{FALSE} to unsubscribe from specified channel(s).}

\item{\code{overwrite}}{\code{(logical)} \strong{Default} \code{FALSE}. Set to \code{TRUE} to overwrite data from previous instances of this channel socket.}

\item{\code{msg_action}}{\code{(expression)} An expression that performs a user-specified action on the receipt of websocket message. These act on the \code{msg} object seen printed to the console when a message is received (if \code{toConsole = TRUE}). The \code{msg} object also contains a \verb{$ts} column with the timestamp as a \code{POSIXct} and a \verb{$socket} column with the socket name of origin (\code{"Alpaca"/"Polygon"}) that are not visible in what is printed to the console but accessible to \code{msg_action}. The expression can also reference the \code{self} internal environment of this \code{\link[R6]{R6Class}}.}

\item{\code{...}}{Named parameters of \code{AlpacaStreams$new()} to be applied to this particular channel.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
If \code{log = TRUE} for a Polygon channel, all non-status messages will be stored as tibbles named according to their respective channel name and accessed via the \verb{$logs()} method.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlpacaStreams-logs"></a>}}
\if{latex}{\out{\hypertarget{method-AlpacaStreams-logs}{}}}
\subsection{Method \code{logs()}}{
Retrieve *Socket Logs/Bars
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlpacaStreams$logs(channel)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{channel}}{\code{(character)} The name of the channel for which to retrieve logs. The socket is auto-filled if a matching channel is available. If blank, all logs are returned.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlpacaStreams-connect"></a>}}
\if{latex}{\out{\hypertarget{method-AlpacaStreams-connect}{}}}
\subsection{Method \code{connect()}}{
Connects both \href{../../AlpacaforR/html/AlpacaSocket.html}{\code{AlpacaSocket}} & \href{../../AlpacaforR/html/PolygonSocket.html}{\code{PolygonSocket}} to their respective server-side sockets.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlpacaStreams$connect(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{named arguments passed on to individual socket initialization methods. see \href{../../AlpacaforR/html/AlpacaSocket.html}{\code{AlpacaSocket}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlpacaStreams-close"></a>}}
\if{latex}{\out{\hypertarget{method-AlpacaStreams-close}{}}}
\subsection{Method \code{close()}}{
Closes connections for both \href{../../AlpacaforR/html/AlpacaSocket.html}{\code{AlpacaSocket}} & \href{../../AlpacaforR/html/PolygonSocket.html}{\code{PolygonSocket}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlpacaStreams$close()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-AlpacaStreams-clone"></a>}}
\if{latex}{\out{\hypertarget{method-AlpacaStreams-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{AlpacaStreams$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
