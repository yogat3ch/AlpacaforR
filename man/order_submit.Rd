% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Orders.R
\name{order_submit}
\alias{order_submit}
\title{Submit, Cancel & Replace Orders,}
\usage{
order_submit(
  symbol_id,
  action = "submit",
  qty = NULL,
  side = NULL,
  type = NULL,
  time_in_force = "day",
  limit = NULL,
  stop = NULL,
  extended_hours = NULL,
  client_order_id = NULL,
  order_class = NULL,
  take_profit = NULL,
  stop_loss = NULL,
  notional = NULL,
  trail_price,
  trail_percent,
  live = get_live()
)
}
\arguments{
\item{symbol_id}{\code{(character)}  The stock symbol (\emph{Required} when \code{action = "submit"}) or Order object (single row tibble) (\emph{Required} when \code{action = "cancel"/"replace"}).
To expedite the setting of stops and limits for open positions, an Order ID from a \code{'buy'} order can be provided when \code{action = "submit"} to place a \code{'sell'} order with the following parameters such that they do not need to be set manually:
\itemize{
\item{\code{side = 'sell'}}
\item{If \code{qty} is not provided, it will be populated from the buy order}
\item{\code{symbol_id} will be set to the symbol from the buy order.}
\item{If \code{client_order_id = TRUE}, the \code{client_order_id} will be set to the buy Order ID provided, effectively linking the orders for your records.}
\item{All other parameters can be specified as usual.}
}}

\item{action}{\code{(character)} The action to take:
\itemize{
\item{\code{"submit"/"s"}}{ \href{https://alpaca.markets/docs/api-documentation/api-v2/orders/#request-a-new-order}{Request a new order} \strong{Default}}
\item{\code{"replace"/"r"}}{ \href{https://alpaca.markets/docs/api-documentation/api-v2/orders/#replace-an-order}{Replace an order}}
\item{\code{"cancel"/"c"}}{ \href{https://alpaca.markets/docs/api-documentation/api-v2/orders/#cancel-an-order}{Cancel an order}}
\item{\code{"cancel_all"}}{ \href{https://alpaca.markets/docs/api-documentation/api-v2/orders/#cancel-all-orders}{Cancel all orders}}
}}

\item{qty}{\code{(integer)} The amount of shares to trade (\emph{required} when \code{action = "submit"}, \emph{optional} when \code{action = 'replace'}).}

\item{side}{\code{(character)} The side of the trade. I.E \code{"buy"/"b"} or \code{"sell"/"s"}. (\emph{required} when \code{action = "submit"}). Assumed to be \code{"buy"} if \code{order_class = "bracket"}.}

\item{type}{\code{(character)} The type of trade order. I.E \code{"market"/"m"},\code{"limit"/"l"},\code{"stop"/"s"},\code{"stop_limit"/"sl"}, \code{"trailing_stop"/"ts"} etc. Default \code{NULL}. Typically \emph{required} except in certain situations where the value can be assumed:
\itemize{
\item{\code{stop} is set (and \code{type} is unset)}{ \code{type = "stop"/"s"}}
\item{\code{limit} is set}{ \code{type = "limit"/"l"}}
\item{\code{stop} & \code{limit} are set}{ \code{type = "stop_limit"/"sl"}}
\item{\code{order_class = "bracket"}}{ \code{type = "market"/"m"}}
\item{\code{order_class = "oco"}}{ \code{type = "limit"/"l"}}
\item{\code{order_class = "oto"}}{ \code{type = "market"/"m"}}
\item{\code{trail_price} is set}{ \code{type = "trailing_stop"}}
\item{\code{trail_percent} is set}{ \code{type = "trailing_stop"}}
}
See \href{https://alpaca.markets/docs/trading-on-alpaca/orders/#bracket-orders}{Understand Orders} for details.}

\item{time_in_force}{\code{(character)} The time in force for the order. \emph{Optional} when \code{action = "replace"}. Args can be \code{"day"}, \code{"gtc"}, \code{"opg"} etc. Default \code{"day"}. Please see \href{https://alpaca.markets/docs/trading-on-alpaca/orders/#time-in-force}{Understand Orders: Time in Force} for all types and more info. Must be \code{"day"} or \code{"gtc"} for \href{https://alpaca.markets/docs/trading-on-alpaca/orders/#bracket-orders}{Advanced Orders}.}

\item{limit}{\code{(numeric)} limit price. \emph{Required} if type is \code{"limit"} or \code{"stop_limit"} for \code{action = 'replace'/'submit'}.}

\item{stop}{\code{(numeric)} stop price. \emph{Required} if type is \code{"stop"} or \code{"stop_limit"} for \code{action = 'replace'/'submit'}.}

\item{extended_hours}{\code{(logical)} Default \code{FALSE}. If \code{TRUE}, order will be eligible to execute in premarket/afterhours. Currently supported hours are: Pre-market: 9:00 - 9:30am, After-hours: 4:00 - 6:00pm ET. Only works with \code{type = 'limit'} and \code{time_in_force = 'day'} on the V2 API.}

\item{client_order_id}{\code{(character/logical)}  <= 48 Characters.  A unique identifier for the order. Automatically generated if not sent.
\itemize{
\item{\code{`action = 'replace'/'submit'`}}{ \emph{Optional} character vector}
\item{\code{`action = 'submit'`}}{ If an Order object is provided to \code{symbol_id}, \code{TRUE} will set the \code{client_order_id} for the sell order to Order ID in \code{symbol_id}. Used to link buy & sell orders for your records.}
}}

\item{order_class}{\code{(character)} \code{'simple'}, \code{'bracket'}, \code{'oco'} or \code{'oto'}. \emph{Required for advanced orders.} For details of non-simple order classes, please see \href{https://alpaca.markets/docs/trading-on-alpaca/orders#bracket-orders}{Advanced Orders}. If \code{order_class = 'bracket'/'oto'}, \code{type} can be omitted as it will always be \code{'market'}, this is also true with \code{order_class = "oco"} as \code{type} will always be \code{'limit'}. \emph{Note} that order replacement is not supported for all advanced order types.}

\item{take_profit}{\code{(named list)} Additional parameters for take-profit leg of advanced orders:
\itemize{
\item{\code{'limit_price'/'l'}}{ \code{numeric} \strong{required} for \code{'bracket'} & \code{'oco'} order classes.}
}}

\item{stop_loss}{\code{(named list)} Additional parameters for stop-loss leg of advanced orders
\itemize{
\item{\code{stop_price/s}}{ \code{numeric} \strong{required} for bracket orders}
\item{\code{limit_price/l}}{ \code{numeric} The stop-loss order becomes a stop-limit order if specified. \strong{Required} for \code{'bracket'} & \code{'oco'} order classes}
}}

\item{notional}{\code{num} dollar amount to trade. Cannot work with qty. Can only work for market order types and day for time in force.}

\item{trail_price}{\code{(numeric)} a dollar value away from the highest water mark (hwm). If you set this to 2.00 for a sell trailing stop, the stop price is always hwm - 2.00}

\item{trail_percent}{\code{(numeric)} a percent value away from the highest water mark. If you set this to 1.0 for a sell trailing stop, the stop price is always hwm * 0.99. Values less than 1 are assumed to be percentages, ie .07 = 7\%, values must be less than 100.}

\item{live}{\code{(logical)} TRUE / FALSE if you are connecting to a live account. Default to FALSE, so it will use the paper url if nothing was provided.}
}
\value{
Order \code{(tibble)} \href{https://alpaca.markets/docs/api-documentation/api-v2/orders/#order-entity}{Order object} or Array of Order Objects with the following information:
\itemize{
\item{\code{id}}{\code{(character)} order id}
\item{\code{client_order_id}}{\code{(character)} client unique order id}
\item{\code{created_at}}{\code{(POSIXct)} nullable When the order was created}
\item{\code{updated_at}}{\code{(POSIXct)} nullable When the order was updated}
\item{\code{submitted_at}}{\code{(POSIXct)} nullable When the order was submitted}
\item{\code{filled_at}}{\code{(POSIXct)} nullable When the order was filled}
\item{\code{expired_at}}{\code{(POSIXct)} nullable When the order was expired}
\item{\code{canceled_at}}{\code{(POSIXct)} nullable When the order was canceled}
\item{\code{failed_at}}{\code{(POSIXct)} nullable When the order failed}
\item{\code{replaced_at}}{\code{(POSIXct)} nullable When the order was replaced}
\item{\code{replaced_by}}{\code{(character)} id of replacement order}
\item{\code{replaces}}{\code{(character)} id of the replaced order}
\item{\code{asset_id}}{\code{(character)} asset ID}
\item{\code{symbol}}{\code{(character)} Asset symbol}
\item{\code{exchange}}{\code{(character)} Asset exchange}
\item{\code{asset_class}}{\code{(character)} Asset class}
\item{\code{qty}}{\code{(integer)} Ordered quantity}
\item{\code{filled_qty}}{\code{(integer)} Filled quantity}
\item{\code{filled_avg_price}}{\code{(numeric)} Filled average price}
\item{\code{order_class}}{\code{(character)}}
\item{\code{order_type}}{\code{(character)}}
\item{\code{type}}{\code{(character)} Valid values: market, limit, stop, stop_limit}
\item{\code{side}}{\code{(character)} Valid values: buy, sell}
\item{\code{time_in_force}}{\code{(character)} time in force}
\item{\code{limit_price}}{\code{(numeric)} Limit price}
\item{\code{stop_price}}{\code{(numeric)} Stop price}
\item{\code{status}}{\code{(character)} Status of the order}
\item{\code{extended_hours}}{\code{(logical)} If true, eligible for execution outside regular trading hours}.
\item{\code{legs}}{\code{(character)} When querying non-simple order_class orders in a nested style, an array of Order entities associated with this order. Otherwise, null.}
}
}
\description{
Places/Replaces/Cancels an order, or cancels all orders depending on argument to \code{action}. See parameter documentation and \href{https://alpaca.markets/docs/api-documentation/api-v2/orders}{Orders} for details.Depending on the \code{action} specified, some arguments are required:
\itemize{
\item{\code{action = 'submit'}}{ All arguments can be submitted. See Arguments for which are \emph{required}.}
\item{\code{action = 'replace'}}{ \code{qty}, \code{time_in_force}, \code{limit}, \code{stop}, \code{client_order_id} are all eligible. Only one is \emph{required}.}
\item{\code{action = 'cancel'}}{ Only \code{symbol_id} is \emph{required}.}
\item{\code{action = 'cancel_all'}}{ No arguments necessary.}
}
}
\examples{
\dontrun{
# most orders (except limit) must be placed during market hours or they will not be filled until the next trading day.
.c <- clock()
if (.c$is_open) {
#' (bo <- order_submit("AAPL", qty = 1, side = "buy", type = "market"))
# Or you can submit a limit order (`type` is assumed to be `"limit"` when only `limit` is set):
lt <- market_data("AAPL", timeframe = "lt")
(so <- order_submit("AAPL", q = 1, side = "s", limit = lt$p * .99))
# cancel an order with `action = "cancel"`. symbol_id can be either the id of the order to cancel or the order tbl object.
order_submit(so, a = "c")
# expedite a simple "sell" order by providing the id of a buy order. This can be linked to it's original buy order on the Alpaca side via the `client_order_id` by simply setting `client_order_id = T`
(so <- order_submit(bo, stop = lt$p * .95, client = TRUE)) # here the id is used
identical(so$client_order_id, bo$id)
# replace `"r"` parameters for simple orders (Alpaca devs are working on replacement for complex orders as of 2020-05-06)
order_submit(so, a = "r", stop = lt$p * .94)
# Complex orders
# Here is an example of setting a "bracket" order
# first retrieve the going price
(.lt <- market_data(timeframe = "lt", symbol_id = "AMZN"))
# sell if the price moves up 3\% by setting `take_profit`
tp <- list(l = .lt$p * 1.03)
# hedge risk by setting a stop if it loses 5\% and limit if it loses 6\% with `stop_loss`
sl <- list(l = .lt$p * .94, s = .lt$p * .95)
# note that the names of these list items can be partial
(br_o <- order_submit("AMZN", order_class = "bracket", qty = 2, take_profit = tp, stop_loss = sl))
# side is assumed to be buy, and type is assumed to be market
# Set a trailing stop by price
m_o <- order_submit("AMZN", side = "buy", type = "market", qty = 1)
ts_o <- order_submit(m_o, trail_price = 30)
# Set a trailing stop by percent
m_o <- order_submit("AMZN", side = "buy", type = "market", qty = 1)
ts_o <- order_submit(m_o, trail_percent = 5)
}
# all open orders can be canceled with `action = "cancel_all"`
order_submit(action = "cancel_all")
}

}
\seealso{
Other Orders: 
\code{\link{orders}()}
}
\concept{Orders}
